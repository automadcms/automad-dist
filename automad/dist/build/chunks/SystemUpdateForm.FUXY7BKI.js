/* Automad 2.0.0-alpha.48, (c) 2025 Marc Anton Dahmen, MIT license */
import{b as l}from"./chunk.42CLRD5U.js";import"./chunk.27GPIFBM.js";import{M as s,a as t,ka as d}from"./chunk.DFXEN6GE.js";import{a as r,e as i}from"./chunk.G4EF3EQN.js";import"./chunk.GP2ROWMN.js";import"./chunk.KC7M4D2V.js";var o=class extends l{progressModal;get states(){return{disabled:this.renderDisabled,notSupported:this.renderNotSupported,success:this.renderSuccess,connectionError:this.renderConnectionError,pending:this.renderPending,upToDate:this.renderUpToDate}}get parallel(){return!1}get initSelf(){return!0}async processResponse(e){if(this.progressModal&&this.progressModal.close(),!e.data)return;let a=e.data;a.state&&Object.keys(this.states).includes(a.state)&&this.states[a.state].apply(this,[a])}renderDisabled(e){this.innerHTML=s`<am-alert ${"am-icon"}="slash-circle" ${"am-text"}="systemUpdateDisabled" ></am-alert>`}renderNotSupported(e){this.innerHTML=s`<am-alert ${"am-icon"}="slash-circle" ${"am-text"}="systemUpdateNotSupportedError" ></am-alert>`}renderSuccess(e){this.renderUpToDate(e);let a=r("am-modal",[],{"am-no-esc":"","am-no-click":"","am-destroy":""},this);a.innerHTML=s`<am-modal-dialog><am-modal-body>${t.text("systemUpdateSuccess")} <br /><span>${t.text("systemUpdateCurrentVersion")}: <strong>${e.current}</strong></span></am-modal-body><am-modal-footer><a href="${t.dashboardURL}" class="${"am-e-button"} ${"am-e-button--primary"}" > ${t.text("systemUpdateSuccessReload")}</a></am-modal-footer></am-modal-dialog>`,a.open()}renderConnectionError(e){this.innerHTML=s`<am-alert ${"am-icon"}="hdd-network" ${"am-text"}="systemUpdateConnectionError" ></am-alert>`}renderPending(e){let a=m=>{let n="";return m.forEach(c=>{n+=s`<li>${c}</li>`}),s`<ul class="${"am-u-text-paragraph"} ${"am-u-text-mono"}"> ${n}</ul>`};this.innerHTML=s`<div class="${"am-c-alert"}"><input type="hidden" name="update" value="run" /><div class="${"am-c-alert__icon"}"><i class="bi bi-download"></i></div><div class="${"am-c-alert__text"}"><div>${t.text("systemUpdateCurrentVersion")} <strong>${e.current}</strong>. <br /> ${t.text("systemUpdateAvailable")}</div><div class="${"am-u-flex"} ${"am-u-flex--gap"}"><am-submit class="${"am-e-button"} ${"am-e-button--primary"}"> ${t.text("systemUpdateTo")} <span class="${"am-e-badge"}">${e.latest}</span></am-submit><a href="https://automad.org/release-notes" class="${"am-e-button"} ${"am-u-display-small-none"}" target="_blank" > Release Notes</a></div></div></div><div><p>${t.text("systemUpdateItems")}</p>${a(e.items)}</div>`;let p=i("am-submit",this);this.listen(p,"click",()=>{this.progressModal=r("am-modal",[],{"am-no-esc":"","am-no-click":"","am-destroy":""},d()),this.progressModal.innerHTML=s`<am-modal-dialog><div class="${"am-c-modal__spinner"}"><span class="${"am-c-modal__spinner-icon"}"></span><span class="${"am-c-modal__spinner-text"}"> ${t.text("systemUpdateProgress")}</span></div></am-modal-dialog>`,this.progressModal.open()})}renderUpToDate(e){this.innerHTML=s`<am-alert ${"am-icon"}="check-circle" ${"am-text"}="systemUpToDate" ></am-alert>`}};customElements.define("am-system-update-form",o);export{o as SystemUpdateFormComponent};
