/* Automad 2.0.0-alpha.47, (c) 2025 Marc Anton Dahmen, MIT license */
import{a as C}from"./chunk.MZK2ONP3.js";import{B as g,D as b,I as v,O as r,P as y,Q as A,S,a as o,da as M,e as p,ja as E,k as f}from"./chunk.ETUXSY6N.js";import{d as h,e as d,f as a}from"./chunk.TNS2LIBN.js";var L=750,D=h(async c=>{c()},L),l=class extends f{constructor(){super();this.additionalData={};this.lastSubmittedFormData="";this.init()}get deduplicationSettings(){return{getFormData:null,enabled:!1}}get parallel(){return!0}get api(){return this.getAttribute("am-api")}get auto(){return this.hasAttribute("am-auto")}get confirm(){return this.getAttribute("am-confirm")}get loadingAnimationMessage(){return this.getAttribute("am-loading-animation")}get watch(){return this.hasAttribute("am-watch")}get initSelf(){return!1}get submitButtons(){let t=a(`am-submit[am-form="${this.api}"]`),e=a("am-submit:not([am-form])",this);return t.concat(e)}get formData(){let t=Object.assign({},this.additionalData,v(this)),e=M();return e&&(t.url=e),t}get parentModal(){return this.closest("am-modal")||null}init(){this.initSelf&&this.submit(!0),this.loadingAnimationMessage&&(this.loadingAnimationModal=g(this.loadingAnimationMessage)),this.hasAttribute("am-focus")&&setTimeout(()=>{d("input").focus()},0),this.hasAttribute("am-enter")&&this.listen(this,"keydown",t=>{t.which==13&&(t.preventDefault(),this.submit())},".am-f-input"),this.disableSubmitButtons(),this.watchChanges()}disableSubmitButtons(){this.watch&&setTimeout(()=>{this.submitButtons.forEach(t=>{t.setAttribute("disabled",""),t.blur()})},0)}isDuplicateSubmission(){if(!this.deduplicationSettings.enabled)return!1;let t=this.deduplicationSettings.getFormData(this);return Object.keys(t).length&&JSON.stringify(t)===this.lastSubmittedFormData?(r().log("Form data has not changed"),!0):(this.lastSubmittedFormData=JSON.stringify(t),!1)}async submit(t=!1){if(!t&&this.confirm&&!await E(this.confirm)||(this.loadingAnimationModal?.open(),this.isDuplicateSubmission()))return;let e=o.addNavigationLock();this.submitButtons.forEach(i=>{i.classList.contains("am-e-button")&&i.classList.add("am-e-button--loading")}),a('input:not([type="hidden"], textarea, [contenteditable])',this).forEach(i=>{i.classList.add("am-validate")}),this.verifyRequired()?(a(".am-validate",this).forEach(i=>{i.classList.remove("am-validate")}),await S(this.api,this,this.parallel,async i=>{await this.processResponse(i),this.hasAttribute("am-event")&&p(this.getAttribute("am-event")),o.removeNavigationLock(e)})):o.removeNavigationLock(e),this.submitButtons.forEach(i=>{i.classList.remove("am-e-button--loading")}),this.loadingAnimationModal?.close()}async processResponse(t){let{redirect:e,reload:i,error:s,success:m,debug:u}=t;typeof e<"u"&&o.root.setView(e),i&&o.reload(),setTimeout(()=>{let n=d(C.TAG_NAME,this);n&&(n.message=s??""),s&&(n||y(s),r().error(s))},0),m&&A(m),u&&u instanceof Array&&u.forEach(n=>{r().log(this.api,n)}),s||(this.disableSubmitButtons(),this.parentModal?.close())}onChange(){if(o.isReady){if(this.auto){D(async()=>{let e=o.addNavigationLock();await this.submit(),o.removeNavigationLock(e)});let t=o.addNavigationLock();setTimeout(()=>{o.removeNavigationLock(t)},L+10)}this.watch&&this.submitButtons.forEach(t=>{t.removeAttribute("disabled")})}}watchChanges(){this.listen(this,"change keydown cut paste drop input",this.onChange.bind(this),b.selector)}verifyRequired(){let t=a("[required]",this),e=[];return t.forEach(i=>{i.value.trim()||e.push(i)}),e.length?(e[0].focus(),!1):!0}};customElements.define("am-form",l);export{L as a,l as b};
