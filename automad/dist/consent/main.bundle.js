/*! Automad 2.0.0-alpha.34, (c) 2025 Marc Anton Dahmen, MIT license */(()=>{"use strict";const e=(e,t=[],n={},s=null,a=null,o=!1)=>{const c=document.createElement(e);t.forEach((e=>{c.classList.add(e)}));for(const[e,t]of Object.entries(n))void 0!==t&&c.setAttribute(e,t);return s&&(o?s.prepend(c):s.appendChild(c)),a&&(c.innerHTML=a),c};var t;!function(e){e.setup="setup",e.login="login",e.resetpassword="resetpassword",e.search="search",e.home="home",e.system="system",e.shared="shared",e.packages="packages",e.page="page",e.trash="trash",e.inpage="inpage",e.components="components"}(t||(t={}));const n='<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill="currentColor" viewBox="0 0 16 16"><path d="M6 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m4.5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m-.5 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/><path d="M8 0a7.96 7.96 0 0 0-4.075 1.114q-.245.102-.437.28A8 8 0 1 0 8 0m3.25 14.201a1.5 1.5 0 0 0-2.13.71A7 7 0 0 1 8 15a6.97 6.97 0 0 1-3.845-1.15 1.5 1.5 0 1 0-2.005-2.005A6.97 6.97 0 0 1 1 8c0-1.953.8-3.719 2.09-4.989a1.5 1.5 0 1 0 2.469-1.574A7 7 0 0 1 8 1c1.42 0 2.742.423 3.845 1.15a1.5 1.5 0 1 0 2.005 2.005A6.97 6.97 0 0 1 15 8c0 .596-.074 1.174-.214 1.727a1.5 1.5 0 1 0-1.025 2.25 7 7 0 0 1-2.51 2.224Z"/></svg>',s="am-cookie-consent",a="AutomadConsentStateChange",o="am-consent-banner",c="am-consent-banner--open",r="am-consent-banner--small",i="am-consent-banner__button",d="am-consent-placeholder";class l extends HTMLElement{static set state(e){localStorage.setItem(s,e),l.banner.classList.remove(c),l.banner.dispatchEvent(new Event(a))}static get state(){return localStorage.getItem(s)}static get hasConsent(){return"accepted"===l.state}static get hasNoConsent(){return"declined"===l.state}get type(){var e;return null!==(e=this.getAttribute("type"))&&void 0!==e?e:"iframe"}constructor(){super()}connectedCallback(){l.hasConsent&&this.injectContent(),l.pendingInstances.push(this),l.banner||this.renderBanner(),this.renderPlaceholder()}renderBanner(){l.banner=e("div",[o],{},document.body,`${n} <span>${decodeURIComponent(window.amCookieConsentText||"This site uses third-party cookies.")}</span>`);((e,t=document)=>t.querySelector(e))("svg",l.banner).addEventListener("click",(()=>{l.banner.classList.toggle(c)}));const t=()=>{e("button",[i],{},l.banner,decodeURIComponent(window.amCookieConsentAccept||"That's fine")).addEventListener("click",(()=>{l.state="accepted",l.pendingInstances.forEach((e=>e.injectContent())),l.pendingInstances=[]}))},s=()=>{e("button",[i],{},l.banner,decodeURIComponent(window.amCookieConsentRevoke||"Revoke consent")).addEventListener("click",(()=>{l.state=null,l.banner.remove(),document.cookie.split(";").map((e=>e.trim())).forEach((e=>{const[t]=e.split("=");/^Automad-/.test(t)||(document.cookie=`${t}=; Max-Age=0; path=/`)})),location.reload()}))};l.banner.addEventListener(a,(()=>(((e,t=document)=>Array.from(t.querySelectorAll(e)))(`.${i}`,l.banner).forEach((e=>{e.remove()})),l.hasNoConsent?(l.banner.classList.add(r,c),void t()):l.hasConsent?(l.banner.classList.add(r),l.banner.setAttribute("title",window.amCookieConsentTooltip||"Manage cookie consent"),void s()):(t(),void e("button",[i],{},l.banner,decodeURIComponent(window.amCookieConsentDecline||"No, thanks")).addEventListener("click",(()=>{l.state="declined",l.banner.classList.add(c)}))))).bind(this)),l.banner.dispatchEvent(new Event(a))}renderPlaceholder(){"iframe"==this.type&&(this.innerHTML="<am-consent-placeholder></am-consent-placeholder>")}injectContent(){const t=this.type;this.removeAttribute("type");const n=Array.from(this.attributes).reduce(((e,t)=>(e[t.name]=t.value,e)),{});if("iframe"===t){const t=e("iframe",[],n);this.replaceWith(t)}if("script"===t){const t=e("script",[],n);setTimeout((()=>{t.text=atob(this.textContent),this.replaceWith(t)}),0)}}}l.banner=null,l.pendingInstances=[];class m extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add(d),this.innerHTML=`${n} <span>${window.amCookieConsentPlaceholder||"Cookies are disabled"}</span>`}}customElements.define("am-consent",l),customElements.define("am-consent-placeholder",m)})();