/*! Automad 2.0.0-alpha.30, (c) 2025 Marc Anton Dahmen, MIT license */(()=>{"use strict";const e=(e,t=[],n={},s=null,a=null,r=!1)=>{const c=document.createElement(e);t.forEach((e=>{c.classList.add(e)}));for(const[e,t]of Object.entries(n))void 0!==t&&c.setAttribute(e,t);return s&&(r?s.prepend(c):s.appendChild(c)),a&&(c.innerHTML=a),c};var t;!function(e){e.setup="setup",e.login="login",e.resetpassword="resetpassword",e.search="search",e.home="home",e.system="system",e.shared="shared",e.packages="packages",e.page="page",e.trash="trash",e.inpage="inpage",e.components="components"}(t||(t={}));const n='<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" fill="currentColor" viewBox="0 0 16 16"><path d="M6 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m4.5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3m-.5 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/><path d="M8 0a7.96 7.96 0 0 0-4.075 1.114q-.245.102-.437.28A8 8 0 1 0 8 0m3.25 14.201a1.5 1.5 0 0 0-2.13.71A7 7 0 0 1 8 15a6.97 6.97 0 0 1-3.845-1.15 1.5 1.5 0 1 0-2.005-2.005A6.97 6.97 0 0 1 1 8c0-1.953.8-3.719 2.09-4.989a1.5 1.5 0 1 0 2.469-1.574A7 7 0 0 1 8 1c1.42 0 2.742.423 3.845 1.15a1.5 1.5 0 1 0 2.005 2.005A6.97 6.97 0 0 1 15 8c0 .596-.074 1.174-.214 1.727a1.5 1.5 0 1 0-1.025 2.25 7 7 0 0 1-2.51 2.224Z"/></svg>',s="am-cookie-consent";class a extends HTMLElement{static set state(e){localStorage.setItem(s,e)}static get hasConsent(){return"accepted"===localStorage.getItem(s)}static get hasNoConsent(){return"declined"===localStorage.getItem(s)}get type(){var e;return null!==(e=this.getAttribute("type"))&&void 0!==e?e:"iframe"}constructor(){super()}connectedCallback(){a.hasConsent?this.injectContent():(a.pendingInstances.push(this),a.banner||this.renderBanner(),this.renderPlaceholder())}renderBanner(){a.banner=e("div",["am-consent-banner"],{},document.body,`${n} ${this.attr("text","This site uses third-party cookies.")}`);if(e("button",["am-consent-banner__button"],{},a.banner,this.attr("accept","That's fine")).addEventListener("click",(()=>{a.state="accepted",a.pendingInstances.forEach((e=>e.injectContent())),a.pendingInstances=[],a.banner.remove()})),a.hasNoConsent)a.banner.classList.add("am-consent-banner--small");else{const t=e("button",["am-consent-banner__button"],{},a.banner,this.attr("decline","No, thanks"));t.addEventListener("click",(()=>{a.state="declined",a.banner.classList.add("am-consent-banner--small"),t.remove()}))}}renderPlaceholder(){"iframe"==this.type&&(this.innerHTML="<am-consent-placeholder></am-consent-placeholder>")}attr(e,t){return decodeURIComponent(this.getAttribute(e)||t)}injectContent(){const t=this.type;this.removeAttribute("type");const n=Array.from(this.attributes).reduce(((e,t)=>(e[t.name]=t.value,e)),{});if("iframe"===t){const t=e("iframe",[],n);this.replaceWith(t)}if("script"===t){const t=e("script",[],n);setTimeout((()=>{t.text=this.textContent,this.replaceWith(t)}),0)}}}a.banner=null,a.pendingInstances=[];class r extends HTMLElement{constructor(){super()}connectedCallback(){this.classList.add("am-consent-placeholder"),this.innerHTML=`${n} <span>Cookies are disabled</span>`}}customElements.define("am-consent",a),customElements.define("am-consent-placeholder",r)})();